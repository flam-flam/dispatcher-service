---
name: CI

on:
  push:
    paths-ignore:
      - README.md
      - .gitignore
      # - .github/

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/dispatcher

jobs:
  tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Version tag
        id: version_tag
        uses: anothrNick/github-tag-action@1.49.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_CONTEXT: branch

  build:
    needs:
      - tag
    permissions:
      packages: write
      contents: read
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - uses: actions-ecosystem/action-get-latest-tag@b7c32daec3395a9616f88548363a42652b22d435 # v1.6.0
      id: latest_tag

    - name: Build${{ github.ref == 'refs/heads/main' && ' and push' || ''}} image tag ${{steps.latest_tag.outputs.tag}}
      uses: docker/build-push-action@v3
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.ref == 'refs/heads/main' }}
        labels: ${{ steps.meta.outputs.labels }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{steps.latest_tag.outputs.tag}}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    - name: Build and push 'latest' tag
      if: ${{ github.ref == 'refs/heads/main' }}
      uses: docker/build-push-action@v3
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.ref == 'refs/heads/main' }}
        labels: ${{ steps.meta.outputs.labels }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
